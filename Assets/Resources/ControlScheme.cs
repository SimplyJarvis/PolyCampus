//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Resources/ControlScheme.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ControlScheme : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ControlScheme()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ControlScheme"",
    ""maps"": [
        {
            ""name"": ""Main"",
            ""id"": ""d19de9d5-d89f-45b3-973a-a8bac9fda311"",
            ""actions"": [
                {
                    ""name"": ""MousePos"",
                    ""type"": ""Value"",
                    ""id"": ""7cfc95aa-d329-4a32-af8f-9d46d73b31a9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""5d847fb3-4414-4341-9f31-c93f11ecfc45"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ToggleCameraMove"",
                    ""type"": ""Button"",
                    ""id"": ""69287249-9217-4bc8-9f2c-d772e23bed40"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleSphereFade"",
                    ""type"": ""Button"",
                    ""id"": ""19a5da85-8054-45f2-ab83-41647f69dc0e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""JS_Camera"",
                    ""type"": ""Value"",
                    ""id"": ""90e88430-dd8d-4ffe-a727-a8b3aa5e75b9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ActivateObject"",
                    ""type"": ""Button"",
                    ""id"": ""45df3095-0b29-4d50-bae2-f2df91aff217"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FloorChange"",
                    ""type"": ""Button"",
                    ""id"": ""dbbb0868-31db-429a-ae3a-f857aa3b7a3e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AnalogueSphereFade"",
                    ""type"": ""Value"",
                    ""id"": ""f2599741-6258-4a9d-8df0-346aa5f59b62"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""879155d5-7f91-4b4e-b323-b49d6e146192"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MainControls"",
                    ""action"": ""MousePos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b25c6ba-afbf-4bef-a060-aae25ed49d66"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MainControls"",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0796c9aa-853d-43b9-8bb5-e2648131c349"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": ""GamePad"",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12e9e125-c1f7-4aae-8462-094935847a1f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleCameraMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""522ae264-76d5-4f84-ab4a-2dce8fa71d20"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": ""MainControls"",
                    ""action"": ""ToggleSphereFade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ca55593-f44b-43b4-a2aa-cbde4ede5b1a"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""InvertVector2,ScaleVector2(x=0.8,y=0.8),StickDeadzone"",
                    ""groups"": ""GamePad"",
                    ""action"": ""JS_Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d34b1d7-0d27-4b8f-97e5-b7bc9379831e"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": ""MainControls"",
                    ""action"": ""ActivateObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbd7b202-4d4b-40b8-b36a-150c2d91fcc1"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""ActivateObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06c1577c-8dfc-4819-b1f9-e3afb2749f1e"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""FloorChange"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""421680e8-f57a-49cf-881f-f225aad9f0c2"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""AnalogueSphereFade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""MainControls"",
            ""bindingGroup"": ""MainControls"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""GamePad"",
            ""bindingGroup"": ""GamePad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Main
        m_Main = asset.FindActionMap("Main", throwIfNotFound: true);
        m_Main_MousePos = m_Main.FindAction("MousePos", throwIfNotFound: true);
        m_Main_Zoom = m_Main.FindAction("Zoom", throwIfNotFound: true);
        m_Main_ToggleCameraMove = m_Main.FindAction("ToggleCameraMove", throwIfNotFound: true);
        m_Main_ToggleSphereFade = m_Main.FindAction("ToggleSphereFade", throwIfNotFound: true);
        m_Main_JS_Camera = m_Main.FindAction("JS_Camera", throwIfNotFound: true);
        m_Main_ActivateObject = m_Main.FindAction("ActivateObject", throwIfNotFound: true);
        m_Main_FloorChange = m_Main.FindAction("FloorChange", throwIfNotFound: true);
        m_Main_AnalogueSphereFade = m_Main.FindAction("AnalogueSphereFade", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Main
    private readonly InputActionMap m_Main;
    private IMainActions m_MainActionsCallbackInterface;
    private readonly InputAction m_Main_MousePos;
    private readonly InputAction m_Main_Zoom;
    private readonly InputAction m_Main_ToggleCameraMove;
    private readonly InputAction m_Main_ToggleSphereFade;
    private readonly InputAction m_Main_JS_Camera;
    private readonly InputAction m_Main_ActivateObject;
    private readonly InputAction m_Main_FloorChange;
    private readonly InputAction m_Main_AnalogueSphereFade;
    public struct MainActions
    {
        private @ControlScheme m_Wrapper;
        public MainActions(@ControlScheme wrapper) { m_Wrapper = wrapper; }
        public InputAction @MousePos => m_Wrapper.m_Main_MousePos;
        public InputAction @Zoom => m_Wrapper.m_Main_Zoom;
        public InputAction @ToggleCameraMove => m_Wrapper.m_Main_ToggleCameraMove;
        public InputAction @ToggleSphereFade => m_Wrapper.m_Main_ToggleSphereFade;
        public InputAction @JS_Camera => m_Wrapper.m_Main_JS_Camera;
        public InputAction @ActivateObject => m_Wrapper.m_Main_ActivateObject;
        public InputAction @FloorChange => m_Wrapper.m_Main_FloorChange;
        public InputAction @AnalogueSphereFade => m_Wrapper.m_Main_AnalogueSphereFade;
        public InputActionMap Get() { return m_Wrapper.m_Main; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainActions set) { return set.Get(); }
        public void SetCallbacks(IMainActions instance)
        {
            if (m_Wrapper.m_MainActionsCallbackInterface != null)
            {
                @MousePos.started -= m_Wrapper.m_MainActionsCallbackInterface.OnMousePos;
                @MousePos.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnMousePos;
                @MousePos.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnMousePos;
                @Zoom.started -= m_Wrapper.m_MainActionsCallbackInterface.OnZoom;
                @Zoom.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnZoom;
                @Zoom.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnZoom;
                @ToggleCameraMove.started -= m_Wrapper.m_MainActionsCallbackInterface.OnToggleCameraMove;
                @ToggleCameraMove.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnToggleCameraMove;
                @ToggleCameraMove.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnToggleCameraMove;
                @ToggleSphereFade.started -= m_Wrapper.m_MainActionsCallbackInterface.OnToggleSphereFade;
                @ToggleSphereFade.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnToggleSphereFade;
                @ToggleSphereFade.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnToggleSphereFade;
                @JS_Camera.started -= m_Wrapper.m_MainActionsCallbackInterface.OnJS_Camera;
                @JS_Camera.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnJS_Camera;
                @JS_Camera.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnJS_Camera;
                @ActivateObject.started -= m_Wrapper.m_MainActionsCallbackInterface.OnActivateObject;
                @ActivateObject.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnActivateObject;
                @ActivateObject.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnActivateObject;
                @FloorChange.started -= m_Wrapper.m_MainActionsCallbackInterface.OnFloorChange;
                @FloorChange.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnFloorChange;
                @FloorChange.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnFloorChange;
                @AnalogueSphereFade.started -= m_Wrapper.m_MainActionsCallbackInterface.OnAnalogueSphereFade;
                @AnalogueSphereFade.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnAnalogueSphereFade;
                @AnalogueSphereFade.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnAnalogueSphereFade;
            }
            m_Wrapper.m_MainActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MousePos.started += instance.OnMousePos;
                @MousePos.performed += instance.OnMousePos;
                @MousePos.canceled += instance.OnMousePos;
                @Zoom.started += instance.OnZoom;
                @Zoom.performed += instance.OnZoom;
                @Zoom.canceled += instance.OnZoom;
                @ToggleCameraMove.started += instance.OnToggleCameraMove;
                @ToggleCameraMove.performed += instance.OnToggleCameraMove;
                @ToggleCameraMove.canceled += instance.OnToggleCameraMove;
                @ToggleSphereFade.started += instance.OnToggleSphereFade;
                @ToggleSphereFade.performed += instance.OnToggleSphereFade;
                @ToggleSphereFade.canceled += instance.OnToggleSphereFade;
                @JS_Camera.started += instance.OnJS_Camera;
                @JS_Camera.performed += instance.OnJS_Camera;
                @JS_Camera.canceled += instance.OnJS_Camera;
                @ActivateObject.started += instance.OnActivateObject;
                @ActivateObject.performed += instance.OnActivateObject;
                @ActivateObject.canceled += instance.OnActivateObject;
                @FloorChange.started += instance.OnFloorChange;
                @FloorChange.performed += instance.OnFloorChange;
                @FloorChange.canceled += instance.OnFloorChange;
                @AnalogueSphereFade.started += instance.OnAnalogueSphereFade;
                @AnalogueSphereFade.performed += instance.OnAnalogueSphereFade;
                @AnalogueSphereFade.canceled += instance.OnAnalogueSphereFade;
            }
        }
    }
    public MainActions @Main => new MainActions(this);
    private int m_MainControlsSchemeIndex = -1;
    public InputControlScheme MainControlsScheme
    {
        get
        {
            if (m_MainControlsSchemeIndex == -1) m_MainControlsSchemeIndex = asset.FindControlSchemeIndex("MainControls");
            return asset.controlSchemes[m_MainControlsSchemeIndex];
        }
    }
    private int m_GamePadSchemeIndex = -1;
    public InputControlScheme GamePadScheme
    {
        get
        {
            if (m_GamePadSchemeIndex == -1) m_GamePadSchemeIndex = asset.FindControlSchemeIndex("GamePad");
            return asset.controlSchemes[m_GamePadSchemeIndex];
        }
    }
    public interface IMainActions
    {
        void OnMousePos(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
        void OnToggleCameraMove(InputAction.CallbackContext context);
        void OnToggleSphereFade(InputAction.CallbackContext context);
        void OnJS_Camera(InputAction.CallbackContext context);
        void OnActivateObject(InputAction.CallbackContext context);
        void OnFloorChange(InputAction.CallbackContext context);
        void OnAnalogueSphereFade(InputAction.CallbackContext context);
    }
}
